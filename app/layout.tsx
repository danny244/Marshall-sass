import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "./components/theme-provider";
import { Navbar } from "./components/Navbar";
import prisma from "./lib/db";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";
import { unstable_noStore as noStore } from "next/cache";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
     title: "Create Next App",
     description: "Generated by create next app",
};

async function getData(userID: string) {
     noStore()
     if (userID) {
          const data = await prisma?.user.findUnique(
               {
                    where: {
                         id: userID
                    },

                    // its  like we are using this to select the specific things we want from the data base
                    select: {
                         colorScheme: true
                    }
               }
          )

          return data
     }
}

export default async function RootLayout({ children, }: Readonly<{ children: React.ReactNode; }>) {

     const { getUser } = getKindeServerSession()
     const user = await getUser()
     const data = await getData(user?.id as string)
     // this ?? here means if the value on d left is false use d one on d right
     return (
          <html lang="en">
               <body className={`${inter.className} ${data?.colorScheme ?? 'theme-orange'}`}>
                    <ThemeProvider
                         attribute="class"
                         defaultTheme="system"
                         enableSystem
                         disableTransitionOnChange
                    >
                         <Navbar />
                         {children}
                    </ThemeProvider>
               </body>
          </html>
     );
}
